package Y.Petstore;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.jupiter.api.;

import static org.junit.jupiter.api.Assertions.;
import static org.junit.jupiter.api.Assumptions.assumeTrue;

@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class UserTests {
	private static String createdUsername = "Vanya";

	@BeforeAll
	public static void setup() {
		RestAssured.useRelaxedHTTPSValidation();
		RestAssured.baseURI = "https://petstore.swagger.io/v2";
	}

	@Test
	@Order(1)
	@DisplayName("POST создание пользователя")
	public void testCreateUser() {
		String requestBody = "{\n" +
				"  \"id\": 21,\n" +
				"  \"username\": \"" + createdUsername + "\",\n" +
				"  \"firstName\": \"string\",\n" +
				"  \"lastName\": \"string\",\n" +
				"  \"email\": \"string\",\n" +
				"  \"password\": \"string\",\n" +
				"  \"phone\": \"string\",\n" +
				"  \"userStatus\": 0\n" +
				"}";
		Response response = RestAssured.given()
				.contentType("application/json")
				.body(requestBody)
				.post("/user");
		assertEquals(200, response.getStatusCode());
		assertEquals("21", response.jsonPath().getString("message"), "ID пользователя должен быть: 21");
	}

	@Test
	@Order(2)
	@DisplayName("GET получение пользователя по имени")
	public void testGetUserByUsername() {
		assumeTrue(createdUsername != null, "Имя пользователя берется из testCreateUser");
		Response response = RestAssured.given()
				.get("/user/" + createdUsername);
		assertEquals(200, response.getStatusCode());
		assertEquals(createdUsername, response.jsonPath().getString("username"), "Имя в ответе должно совпадать с именем в запросе");
	}

	@Test
	@Order(3)
	@DisplayName("PUT обновление информации о пользователе")
	public void testUpdateUser() {
		String updatedUsername = "STring";
		String requestBody = "{\n" +
				"  \"id\": 21,\n" +
				"  \"username\": \"" + updatedUsername + "\",\n" +
				"  \"firstName\": \"string\",\n" +
				"  \"lastName\": \"Ivanov\",\n" +
				"  \"email\": \"string\",\n" +
				"  \"password\": \"string\",\n" +
				"  \"phone\": \"string\",\n" +
				"  \"userStatus\": 0\n" +
				"}";
		Response response = RestAssured.given()
				.contentType("application/json")
				.body(requestBody)
				.put("/user/" + createdUsername);
		assertEquals(200, response.getStatusCode());
		assertEquals("21", response.jsonPath().getString("message"), "Сообщение в ответе должно совпадать с сообщением в запросе");
		createdUsername = updatedUsername;
	}

	@Test
	@Order(4)
	@DisplayName("DELETE удаление пользователя")
	public void testDeleteUser() {
		assumeTrue(createdUsername != null, "Имя пользователяя должно быть взято testCreateUser");
		Response response = RestAssured.given()
				.delete("/user/" + createdUsername);
		assertEquals(200, response.getStatusCode());
		assertEquals(createdUsername, response.jsonPath().getString("message"), "Message in response should match the deleted username");
	}
} // можно еще написать для проверки гетовый запрос с 404 ответом, чтобы убедиться, что пользователь действительно удалился
